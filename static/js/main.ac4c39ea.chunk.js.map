{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Section/Section.module.css","components/FriendList/FriendList.module.css","components/Section/Section.js","components/images/defaultImage.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Section","children","className","s","section","Profile","name","tag","location","avatar","stats","followers","views","likes","profile","box","description","src","alt","item","label","quantity","defaultProps","defaultImage","Statistics","title","percentage","statistics","map","stat","style","backgroundColor","Math","floor","random","toString","id","FriendListItem","isOnline","status","width","FriendList","friends","friend_list","friend","TransactionHistory","items","transaction_history","thead","head_line","th","tbody","body_line","classnames","td","td_type","type","amount","td_currency","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac4c39ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1zpkB\",\"box\":\"Profile_box__2L6Zs\",\"description\":\"Profile_description__2VqCd\",\"avatar\":\"Profile_avatar__3XdfJ\",\"name\":\"Profile_name__2Brzh\",\"tag\":\"Profile_tag__3s8C0\",\"location\":\"Profile_location__1SrIc\",\"stats\":\"Profile_stats__1YnWP\",\"item\":\"Profile_item__24FrT\",\"label\":\"Profile_label__240lG\",\"quantity\":\"Profile_quantity__3-i1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__192Xq\",\"thead\":\"TransactionHistory_thead__3lvCn\",\"head_line\":\"TransactionHistory_head_line__1I-Z6\",\"th\":\"TransactionHistory_th__s_n0C\",\"tbody\":\"TransactionHistory_tbody__2L9FP\",\"td\":\"TransactionHistory_td__3crI2\",\"body_line\":\"TransactionHistory_body_line__1K6zC\",\"td_type\":\"TransactionHistory_td_type__2SqeQ\",\"td_currency\":\"TransactionHistory_td_currency__j65yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__vgT2S\",\"box\":\"Statistics_box__1DJ8Q\",\"title\":\"Statistics_title__CYz3r\",\"stat-list\":\"Statistics_stat-list__18jTu\",\"item\":\"Statistics_item__1sbIs\",\"label\":\"Statistics_label__17b8m\",\"percentage\":\"Statistics_percentage__2sNP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1nwcD\",\"status\":\"FriendListItem_status__302sw\",\"avatar\":\"FriendListItem_avatar__1i9Fd\",\"name\":\"FriendListItem_name__67_GJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__zBl75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2Yahz\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ children }) => <section className={s.section}>{children}</section>;\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export default __webpack_public_path__ + \"static/media/defaultImage.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport defaultImage from '../images/defaultImage.jpg';\n\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes } }) => (\n  <div className={s.profile}>\n    <div className={s.box}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers: </span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views: </span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes: </span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nProfile.defaultProps = {\n  name: 'unknown',\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape(PropTypes.number.isRequired).isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst generateColor = () => {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n};\n\nconst Statistics = ({ title, stats, percentage }) => (\n  <section className={s.statistics}>\n    <div className={s.box}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s['stat-list']}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={s.item}\n            style={{\n              backgroundColor: `${generateColor()}`,\n            }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage || percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </section>\n);\n\nStatistics.defaultProps = {\n  percentage: 0,\n};\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\nimport defaultImage from '../../images/defaultImage.jpg';\n\nconst FriendListItem = ({ avatar = defaultImage, name, isOnline }) => (\n  <li className={s.item}>\n    <span className={s.status} style={{ backgroundColor: isOnline ? 'green' : 'red' }}></span>\n    <img className={s.avatar} src={avatar} alt={name} width=\"96px\" />\n    <p className={s.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={s.friend_list}>\n    {friends.map(friend => (\n      <FriendListItem key={`friend-list-item-${friend.id}`} {...friend} />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default FriendList;\n","import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={s.transaction_history}>\n    <thead className={s.thead}>\n      <tr className={s.head_line}>\n        <th className={s.th}>Type</th>\n        <th className={s.th}>Amount</th>\n        <th className={s.th}>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody className={s.tbody}>\n      {items.map(item => (\n        <tr key={item.id} /*{id}*/ className={s.body_line}>\n          <td className={classnames(s.td, s.td_type)}>{item.type}</td>\n          <td className={s.td}>{item.amount}</td>\n          <td className={classnames(s.td, s.td_currency)}>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default TransactionHistory;\n","import Section from './components/Section/Section';\n\nimport Profile from './components/Profile/Profile';\nimport user from './data/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nconst App = () => (\n  <div>\n    <Section>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n    </Section>\n\n    <Statistics title=\"Upload stats\" stats={statisticalData}></Statistics>\n    <Statistics stats={statisticalData} />\n\n    <Section>\n      <FriendList friends={friends} />\n    </Section>\n\n    <Section>\n      <TransactionHistory items={transactions} />\n    </Section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport './reset.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}